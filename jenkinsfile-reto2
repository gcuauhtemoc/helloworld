pipeline {
    agent none

    stages {
        stage('GetCode') {
            agent { label 'master' }
            steps {
                bat "whoami"
		        bat "hostname"
		        echo "WORKSPACE: ${env.WORKSPACE}"
                git 'https://github.com/gcuauhtemoc/helloworld'
                stash includes: '**', name: 'source-code'
            }
        }
        stage('Pruebas y Analisis') {
            parallel {
                stage('Unitarias') {
                    agent { label 'agente03' }
                    steps {
                        bat "whoami"
		                bat "hostname"
		                echo "WORKSPACE: ${env.WORKSPACE}"
                        unstash 'source-code'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                C:\\Users\\Agente01W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\coverage run --branch --source=app --omit=\\_init_.py.app\\api.py -m pytest test\\unit --junitxml=result-unit.xml
                                C:\\Users\\Agente01W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\coverage xml
                            '''
                        }
                        stash includes: 'coverage.xml', name: 'coverage-data'
                        junit 'result-unit.xml'
                    }
                }
                stage('Integracion') {
                    agent { label 'agente04' }
                    steps {
                        bat "whoami"
            		    bat "hostname"
            		    echo "WORKSPACE: ${env.WORKSPACE}"
                        unstash 'source-code'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''
                                set FLASK_APP=app\\api.py
                                start C:\\Users\\Agente02W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\flask run
                                set PYTHONPATH=%WORKSPACE%
                                start java -jar C:\\Users\\Agente02W\\Documents\\Instaladores_complementos\\wiremock-standalone-3.10.0.jar --port 9090 --root-dir C:\\Users\\Agente02W\\Documents\\Labs\\helloworld\\test\\wiremock
                                ping -n 15 127.0.0.1
                                C:\\Users\\Agente02W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\pytest --junitxml=result-rest.xml test\\rest
                            '''
                        }
                        junit 'result-rest.xml'
                    }
                }
                stage('AnalisisCodigo') {
                    agent { label 'agente03' }
                    steps {
                        bat "whoami"
            		    bat "hostname"
            		    echo "WORKSPACE: ${env.WORKSPACE}"
                        unstash 'source-code'
                        bat '''
                            C:\\Users\\Agente01W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\flake8 --exit-zero --format=pylint app>flake8.out
                        '''
                        recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], 
                                     qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], 
                                                    [threshold: 10, type: 'TOTAL', unstable: false]]
                    }
                }
                stage('Seguridad') {
                    agent { label 'agente04' }
                    steps {
                        bat "whoami"
            		    bat "hostname"
            		    echo "WORKSPACE: ${env.WORKSPACE}"
                        unstash 'source-code'
                        bat '''
                            C:\\Users\\Agente02W\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}"
                        '''
                        recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')],
                                     qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], 
                                                    [threshold: 4, type: 'TOTAL', unstable: false]]
                    }
                }
            }
        }
        stage('Cobertura') {
            agent { label 'agente03' }
            steps {
                bat "whoami"
		        bat "hostname"
		        echo "WORKSPACE: ${env.WORKSPACE}"
                unstash 'coverage-data'
                catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
                    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '95,0,95', lineCoverageTargets: '90,0,90'
                }
            }
        }
        stage('Rendimiento') {
            agent { label 'agente04' }
            steps {
                bat "whoami"
		        bat "hostname"
		        echo "WORKSPACE: ${env.WORKSPACE}"
                unstash 'source-code'
                bat '''
                    C:\\Users\\Agente02W\\Documents\\Instaladores_complementos\\apache-jmeter-5.6.3\\bin\\jmeter -n -t C:\\Users\\Agente02W\\Documents\\Instaladores_complementos\\apache-jmeter-5.6.3\\bin\\Result\\flask01.jmx -f -l flask01.jtl
                '''
                perfReport sourceDataFiles: 'flask01.jtl'
            }
        }
        stage('Clean'){
            agent { label 'master' }
            steps {
                bat "whoami"
                bat "hostname"
                echo "WORKSPACE: ${env.WORKSPACE}"
                cleanWs(
                    deleteDirs: true)
            }
        }
    }
}
