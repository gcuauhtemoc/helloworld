pipeline {
	agent any

	stages {
		stage ('GetCode'){
		steps {
			git 'https://github.com/gcuauhtemoc/helloworld'
			
		}
	}
        stage('Unitarias'){
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\coverage run --branch --source=app --omit=app\\_init_.py.app\\api.py -m pytest test\\unit --junitxml=result-unit.xml
                    C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\coverage xml
                    '''
                }
                junit 'result-unit.xml'
            }
        }
        stage('Integracion'){
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                bat '''
                set FLASK_APP=app\\api.py
                start  C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\flask run
                set PYTHONPATH=%WORKSPACE%
                start java -jar C:\\Users\\DevOps\\Documents\\Instaladores_complementos\\wiremock-standalone-3.10.0.jar --port 9090 --root-dir C:\\Users\\DevOps\\Documents\\Labs\\helloworld\\test\\wiremock
                ping -n 15 127.0.0.1
                C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\pytest --junitxml=result-rest.xml test\\rest
                '''
                }
                junit 'result-rest.xml'
            }
        }
        stage('AnalisisCodigo') {
            steps {
                bat '''
                    C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\flake8 --exit-zero --format=pylint app>flake8.out
                '''
                recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], 
                             qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], 
                                            [threshold: 10, type: 'TOTAL', unstable: false]]
            }
        }
        stage('Seguridad') {
            steps {
                bat '''
                    C:\\Users\\DevOps\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}"
                    '''
                    recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')],
                    qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], 
                    [threshold: 4, type: 'TOTAL', unstable: false]]
            }
        }
        stage('Cobertura') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
                    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,0,95', lineCoverageTargets: '100,0,90'
                }
            }
        }
        stage('Rendimiento') {
            steps {
                bat '''
                    C:\\Users\\DevOps\\Documents\\Instaladores_complementos\\apache-jmeter-5.6.3\\bin\\jmeter -n -t C:\\Users\\DevOps\\Documents\\Instaladores_complementos\\apache-jmeter-5.6.3\\bin\\Result\\flask01.jmx -f -l flask01.jtl
                '''
                perfReport sourceDataFiles: 'flask01.jtl'
            }
        }
    }
}
